// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: history_views.proto

package history_views

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     uint64               `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ContentID  uint64               `protobuf:"varint,2,opt,name=ContentID,proto3" json:"ContentID,omitempty"`
	StopView   *duration.Duration   `protobuf:"bytes,3,opt,name=StopView,proto3" json:"StopView,omitempty"`
	Duration   *duration.Duration   `protobuf:"bytes,4,opt,name=Duration,proto3" json:"Duration,omitempty"`
	DateAdding *timestamp.Timestamp `protobuf:"bytes,5,opt,name=DateAdding,proto3" json:"DateAdding,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_views_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_history_views_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_history_views_proto_rawDescGZIP(), []int{0}
}

func (x *View) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *View) GetContentID() uint64 {
	if x != nil {
		return x.ContentID
	}
	return 0
}

func (x *View) GetStopView() *duration.Duration {
	if x != nil {
		return x.StopView
	}
	return nil
}

func (x *View) GetDuration() *duration.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *View) GetDateAdding() *timestamp.Timestamp {
	if x != nil {
		return x.DateAdding
	}
	return nil
}

type ViewsOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	SortDate string `protobuf:"bytes,2,opt,name=SortDate,proto3" json:"SortDate,omitempty"`
	Limit    uint32 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset   uint32 `protobuf:"varint,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *ViewsOptions) Reset() {
	*x = ViewsOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_views_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewsOptions) ProtoMessage() {}

func (x *ViewsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_history_views_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewsOptions.ProtoReflect.Descriptor instead.
func (*ViewsOptions) Descriptor() ([]byte, []int) {
	return file_history_views_proto_rawDescGZIP(), []int{1}
}

func (x *ViewsOptions) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ViewsOptions) GetSortDate() string {
	if x != nil {
		return x.SortDate
	}
	return ""
}

func (x *ViewsOptions) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ViewsOptions) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type Views struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLast bool    `protobuf:"varint,1,opt,name=IsLast,proto3" json:"IsLast,omitempty"`
	Views  []*View `protobuf:"bytes,2,rep,name=Views,proto3" json:"Views,omitempty"`
}

func (x *Views) Reset() {
	*x = Views{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_views_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Views) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Views) ProtoMessage() {}

func (x *Views) ProtoReflect() protoreflect.Message {
	mi := &file_history_views_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Views.ProtoReflect.Descriptor instead.
func (*Views) Descriptor() ([]byte, []int) {
	return file_history_views_proto_rawDescGZIP(), []int{2}
}

func (x *Views) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

func (x *Views) GetViews() []*View {
	if x != nil {
		return x.Views
	}
	return nil
}

type Nothing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dummy bool `protobuf:"varint,1,opt,name=Dummy,proto3" json:"Dummy,omitempty"`
}

func (x *Nothing) Reset() {
	*x = Nothing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_views_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nothing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nothing) ProtoMessage() {}

func (x *Nothing) ProtoReflect() protoreflect.Message {
	mi := &file_history_views_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nothing.ProtoReflect.Descriptor instead.
func (*Nothing) Descriptor() ([]byte, []int) {
	return file_history_views_proto_rawDescGZIP(), []int{3}
}

func (x *Nothing) GetDummy() bool {
	if x != nil {
		return x.Dummy
	}
	return false
}

type HasViewMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasView bool  `protobuf:"varint,1,opt,name=HasView,proto3" json:"HasView,omitempty"`
	View    *View `protobuf:"bytes,2,opt,name=View,proto3" json:"View,omitempty"`
}

func (x *HasViewMessage) Reset() {
	*x = HasViewMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_history_views_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasViewMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasViewMessage) ProtoMessage() {}

func (x *HasViewMessage) ProtoReflect() protoreflect.Message {
	mi := &file_history_views_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasViewMessage.ProtoReflect.Descriptor instead.
func (*HasViewMessage) Descriptor() ([]byte, []int) {
	return file_history_views_proto_rawDescGZIP(), []int{4}
}

func (x *HasViewMessage) GetHasView() bool {
	if x != nil {
		return x.HasView
	}
	return false
}

func (x *HasViewMessage) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

var File_history_views_proto protoreflect.FileDescriptor

var file_history_views_proto_rawDesc = []byte{
	0x0a, 0x13, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x01, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x35, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x56, 0x69, 0x65, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x56, 0x69, 0x65, 0x77, 0x12, 0x35, 0x0a, 0x08, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x70,
	0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x4a, 0x0a, 0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4c,
	0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4c, 0x61, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22, 0x1f, 0x0a, 0x07,
	0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x75, 0x6d, 0x6d, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x44, 0x75, 0x6d, 0x6d, 0x79, 0x22, 0x53, 0x0a,
	0x0e, 0x48, 0x61, 0x73, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x56, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x48, 0x61, 0x73, 0x56, 0x69, 0x65, 0x77, 0x12, 0x27, 0x0a, 0x04, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x56, 0x69,
	0x65, 0x77, 0x32, 0xb5, 0x02, 0x0a, 0x13, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x69,
	0x65, 0x77, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x16, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x4e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x73,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x14, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x69, 0x65, 0x77, 0x73, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x1a, 0x14, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x07, 0x48, 0x61, 0x73,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x13, 0x2e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x1a, 0x1d, 0x2e, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x2e, 0x48, 0x61, 0x73, 0x56, 0x69, 0x65,
	0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f,
	0x3b, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_history_views_proto_rawDescOnce sync.Once
	file_history_views_proto_rawDescData = file_history_views_proto_rawDesc
)

func file_history_views_proto_rawDescGZIP() []byte {
	file_history_views_proto_rawDescOnce.Do(func() {
		file_history_views_proto_rawDescData = protoimpl.X.CompressGZIP(file_history_views_proto_rawDescData)
	})
	return file_history_views_proto_rawDescData
}

var file_history_views_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_history_views_proto_goTypes = []interface{}{
	(*View)(nil),                // 0: history_views.View
	(*ViewsOptions)(nil),        // 1: history_views.ViewsOptions
	(*Views)(nil),               // 2: history_views.Views
	(*Nothing)(nil),             // 3: history_views.Nothing
	(*HasViewMessage)(nil),      // 4: history_views.HasViewMessage
	(*duration.Duration)(nil),   // 5: google.protobuf.Duration
	(*timestamp.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_history_views_proto_depIdxs = []int32{
	5, // 0: history_views.View.StopView:type_name -> google.protobuf.Duration
	5, // 1: history_views.View.Duration:type_name -> google.protobuf.Duration
	6, // 2: history_views.View.DateAdding:type_name -> google.protobuf.Timestamp
	0, // 3: history_views.Views.Views:type_name -> history_views.View
	0, // 4: history_views.HasViewMessage.View:type_name -> history_views.View
	0, // 5: history_views.HistoryViewsService.UpdateProgressView:input_type -> history_views.View
	1, // 6: history_views.HistoryViewsService.GetPartiallyViewsByUser:input_type -> history_views.ViewsOptions
	1, // 7: history_views.HistoryViewsService.GetAllViewsByUser:input_type -> history_views.ViewsOptions
	0, // 8: history_views.HistoryViewsService.HasView:input_type -> history_views.View
	3, // 9: history_views.HistoryViewsService.UpdateProgressView:output_type -> history_views.Nothing
	2, // 10: history_views.HistoryViewsService.GetPartiallyViewsByUser:output_type -> history_views.Views
	2, // 11: history_views.HistoryViewsService.GetAllViewsByUser:output_type -> history_views.Views
	4, // 12: history_views.HistoryViewsService.HasView:output_type -> history_views.HasViewMessage
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_history_views_proto_init() }
func file_history_views_proto_init() {
	if File_history_views_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_history_views_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_views_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewsOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_views_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Views); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_views_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nothing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_history_views_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasViewMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_history_views_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_history_views_proto_goTypes,
		DependencyIndexes: file_history_views_proto_depIdxs,
		MessageInfos:      file_history_views_proto_msgTypes,
	}.Build()
	File_history_views_proto = out.File
	file_history_views_proto_rawDesc = nil
	file_history_views_proto_goTypes = nil
	file_history_views_proto_depIdxs = nil
}
