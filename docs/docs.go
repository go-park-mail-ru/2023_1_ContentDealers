// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/selections": {
            "get": {
                "description": "Получить все подборки\nЧерез параметры можно указать лимит фильмов / сериалов в одной подборке",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movieselection"
                ],
                "summary": "Get All",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ограничение на количество",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смешение от первого фильма",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/selections/id": {
            "get": {
                "description": "Получить конкретную подборку\nЧерез параметры можно указать лимит фильмов / сериалов в одной подборке",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movieselection"
                ],
                "summary": "Get By Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ограничение на количество",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смешение от первого фильма",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/avatar/upload": {
            "post": {
                "description": "Обновить аватар пользователя\nНеобходимы куки\nНеобходим CSRF токен\nПринимаем multipart/form-data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Upload Avatar",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user.errorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/user.errorResponseDTO"
                        }
                    }
                }
            }
        },
        "/user/csrf": {
            "get": {
                "description": "Получить CSRF токен\nНеобходимы куки",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CSRF",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.tokenDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user.errorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/user.errorResponseDTO"
                        }
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "description": "Выйти из аккаунта\nНеобходимы куки\nНеобходим csrf токен",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "description": "Обновить аватар\nНеобходимы куки\nНеобходим CSRF токен",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.profileDTO"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/user.errorResponseDTO"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/user.errorResponseDTO"
                        }
                    }
                }
            }
        },
        "/user/signin": {
            "post": {
                "description": "Войти в аккаунт",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignIn",
                "parameters": [
                    {
                        "description": "Данные для входа в аккаунт",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.userCredentialsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Создать аккаунт",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "Информация об аккаунте",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.userCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "user.errorResponseDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "user.profileDTO": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "user.tokenDTO": {
            "type": "object",
            "properties": {
                "csrf-token": {
                    "type": "string"
                }
            }
        },
        "user.userCreateDTO": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.userCredentialsDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Filmium Backend API",
	Description:      "API Server for Filmium Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
