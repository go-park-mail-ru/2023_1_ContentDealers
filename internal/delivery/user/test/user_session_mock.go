// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go

// Package test is a generated GoMock package.
package test

import (
	context "context"
	io "io"
	reflect "reflect"

	domain "github.com/go-park-mail-ru/2023_1_ContentDealers/session/pkg/domain"
	domain0 "github.com/go-park-mail-ru/2023_1_ContentDealers/user/pkg/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockUserGateway is a mock of UserGateway interface.
type MockUserGateway struct {
	ctrl     *gomock.Controller
	recorder *MockUserGatewayMockRecorder
}

// MockUserGatewayMockRecorder is the mock recorder for MockUserGateway.
type MockUserGatewayMockRecorder struct {
	mock *MockUserGateway
}

// NewMockUserGateway creates a new mock instance.
func NewMockUserGateway(ctrl *gomock.Controller) *MockUserGateway {
	mock := &MockUserGateway{ctrl: ctrl}
	mock.recorder = &MockUserGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserGateway) EXPECT() *MockUserGatewayMockRecorder {
	return m.recorder
}

// Auth mocks base method.
func (m *MockUserGateway) Auth(ctx context.Context, user domain0.User) (domain0.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Auth", ctx, user)
	ret0, _ := ret[0].(domain0.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Auth indicates an expected call of Auth.
func (mr *MockUserGatewayMockRecorder) Auth(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Auth", reflect.TypeOf((*MockUserGateway)(nil).Auth), ctx, user)
}

// DeleteAvatar mocks base method.
func (m *MockUserGateway) DeleteAvatar(arg0 context.Context, arg1 domain0.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAvatar", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAvatar indicates an expected call of DeleteAvatar.
func (mr *MockUserGatewayMockRecorder) DeleteAvatar(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAvatar", reflect.TypeOf((*MockUserGateway)(nil).DeleteAvatar), arg0, arg1)
}

// GetByID mocks base method.
func (m *MockUserGateway) GetByID(ctx context.Context, id uint64) (domain0.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(domain0.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockUserGatewayMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockUserGateway)(nil).GetByID), ctx, id)
}

// Register mocks base method.
func (m *MockUserGateway) Register(ctx context.Context, user domain0.User) (domain0.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", ctx, user)
	ret0, _ := ret[0].(domain0.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Register indicates an expected call of Register.
func (mr *MockUserGatewayMockRecorder) Register(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockUserGateway)(nil).Register), ctx, user)
}

// Update mocks base method.
func (m *MockUserGateway) Update(ctx context.Context, user domain0.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockUserGatewayMockRecorder) Update(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockUserGateway)(nil).Update), ctx, user)
}

// UpdateAvatar mocks base method.
func (m *MockUserGateway) UpdateAvatar(arg0 context.Context, arg1 domain0.User, arg2 io.Reader) (domain0.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAvatar", arg0, arg1, arg2)
	ret0, _ := ret[0].(domain0.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAvatar indicates an expected call of UpdateAvatar.
func (mr *MockUserGatewayMockRecorder) UpdateAvatar(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAvatar", reflect.TypeOf((*MockUserGateway)(nil).UpdateAvatar), arg0, arg1, arg2)
}

// MockSessionGateway is a mock of SessionGateway interface.
type MockSessionGateway struct {
	ctrl     *gomock.Controller
	recorder *MockSessionGatewayMockRecorder
}

// MockSessionGatewayMockRecorder is the mock recorder for MockSessionGateway.
type MockSessionGatewayMockRecorder struct {
	mock *MockSessionGateway
}

// NewMockSessionGateway creates a new mock instance.
func NewMockSessionGateway(ctrl *gomock.Controller) *MockSessionGateway {
	mock := &MockSessionGateway{ctrl: ctrl}
	mock.recorder = &MockSessionGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionGateway) EXPECT() *MockSessionGatewayMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSessionGateway) Create(ctx context.Context, user domain0.User) (domain.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, user)
	ret0, _ := ret[0].(domain.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockSessionGatewayMockRecorder) Create(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessionGateway)(nil).Create), ctx, user)
}

// Delete mocks base method.
func (m *MockSessionGateway) Delete(ctx context.Context, sessionID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, sessionID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockSessionGatewayMockRecorder) Delete(ctx, sessionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSessionGateway)(nil).Delete), ctx, sessionID)
}

// Get mocks base method.
func (m *MockSessionGateway) Get(ctx context.Context, sessionID string) (domain.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, sessionID)
	ret0, _ := ret[0].(domain.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSessionGatewayMockRecorder) Get(ctx, sessionID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSessionGateway)(nil).Get), ctx, sessionID)
}
