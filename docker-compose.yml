version: '3'

# для того, чтобы скрипт инициализации отработал, БД должна быть пуста
  # 1. sudo rm -rf tmp_persist/pgdata/*
  # 2. sudo -i && rm -rf tmp_persist/pgdata/*

# docker compose up --build 
  # если произошли изменения в Dockerfile
  # или есть скрипт заполнения бд, скачиваемый по ссылке, изменился

# docker compose config - подставляет переменные окружения из .env в ${POSTGRES_PASSWORD} и показывает итоговый конфиг 

services:

# -------------------------------------
# ===========[ STORAGES ]==============
# -------------------------------------
  postgres:
    build:
      context: .
      dockerfile: postgres-dockerfile
    restart: always
    environment: 
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - ./tmp_persist:/var/lib/postgresql/data
    networks:
      net:
        ipv4_address: 192.168.243.20
        
# -------------------------------------

  redis:
    image: 'redis'
    volumes:
      - ./tmp_persist/redis_data:/data
    ports:
      - '6379:6379'
    networks:
      net:
        ipv4_address: 192.168.243.21
      
# -------------------------------------
# ==========[ SERVICES ]===============
# -------------------------------------

  content:
    build:
      context: .
      dockerfile: services-dockerfile
    links:
      - postgres:postgres
    depends_on:
      - postgres
    environment: 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
    - ./build/content:/build/
    - ./log:/log
    networks:
      net:
        ipv4_address: 192.168.243.11

# -------------------------------------

  user:
    build:
      context: .
      dockerfile: services-dockerfile
    links:
      - postgres:postgres
    depends_on:
      - postgres
    environment: 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
    - ./build/user:/build/
    - ./media:/media/
    - ./log:/log
    networks:
      net:
        ipv4_address: 192.168.243.12

# -------------------------------------

  favorites:
    build:
      context: .
      dockerfile: services-dockerfile
    links:
      - postgres:postgres
    depends_on:
      - postgres
    environment: 
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
    - ./build/favorites:/build/
    - ./log:/log
    networks:
      net:
        ipv4_address: 192.168.243.13

# -------------------------------------

  session:
    build:
      context: .
      dockerfile: services-dockerfile
    links:
      - redis:redis
    depends_on:
      - redis
    volumes:
    - ./build/session:/build/
    - ./log:/log
    networks:
      net:
        ipv4_address: 192.168.243.14

# -------------------------------------
# ========[ API-GATEWAY ]==============
# -------------------------------------

  api_gateway:
    build:
      context: .
      dockerfile: services-dockerfile
    ports:
      - 8080:80
    links:
      - session:session
      - user:user
      - favorites:favorites
      - content:content
    depends_on:
      - session
      - user
      - favorites
      - content
    environment: 
      - CSRF_TOKEN=${CSRF_TOKEN}
    volumes:
    - ./build/api_gateway:/build/
    - ./log:/log
    networks:
      net:
        ipv4_address: 192.168.243.10

# -------------------------------------
# ==========[ METRICS ]================
# -------------------------------------

  # grafana:
  #   image: grafana/grafana
  #   links:
  #   -  prometheus:prometheus
  #   ports:
  #   - 3000:3000
  #   user: "104"
  #   networks:
  #     net:
  #       ipv4_address: 192.168.243.30
  # prometheus:
  #   image: prom/prometheus
  #   links:
  #   -  api_gateway:api_gateway
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./metrics:/etc/prometheus
  #   networks:
  #     net:
  #       ipv4_address: 192.168.243.31

        
# -------------------------------------
# ==========[ NETWORKS ]===============
# -------------------------------------

networks:
  net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.243.0/24

